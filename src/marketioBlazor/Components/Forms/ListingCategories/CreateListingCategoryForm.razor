@using Common;
@using Common.DTO;
@using Common.Helpers;
@using Newtonsoft.Json;
@using marketioBlazor.Authentication;
@using RestSharp;
@using marketioBlazor.Components.UI
@inject IJSRuntime js
@inject AuthenticationStateProvider authStateProvider
@inject NavigationManager navManager
@inject ApiClientService ApiClient
@inject IToastService toastService


<EditForm Model="_category" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    @*<ValidationSummary />*@

    <div class="form-group">
        @*category name field*@
        <label for="name">Add a new category</label>
            <div class="d-flex">
            <InputText class="form-control rounded-start border" id="name" @bind-Value="_category.Name" placeholder="Enter a category name..." />
       
        @*submit button*@
        <button type="submit" class="btn btn-primary rounded-end">
            Create @*<Spinner />*@
        </button>
        </div>
            <ValidationMessage For="@(() => _category.Name)" />
    </div>


    @*error message display *@
    <label class="text-danger fw-bold">@errorMessage</label>

</EditForm>

@code {
    private EditContext? editContext;
    private string errorMessage = "";
    private ListingCategory _category = new ListingCategory() { DateCreated = DateTime.UtcNow };

    protected override void OnInitialized()
    {
        editContext = new(_category);
    }

    private async void HandleValidSubmit()
    {
        try
        {
            if (editContext != null && editContext.Validate())
            {
                ApiClient = new ApiClientService();
                var response = await ApiClient.PostAsync<ListingCategory>(_category, "ListingCategories"); 

                if (response.IsSuccessStatusCode)
                {
                    toastService.ShowSuccess("Category created successfully!");
                }
                //navManager.NavigateTo("/", true);
                return;
            }
        }
        catch { }

        errorMessage = "Something went wrong.";
    }

}