@page "/"
@using Common
@using Common.Models;
@using marketioBlazor.Components
@inject IJSRuntime js
@inject AuthenticationStateProvider authStateProvider
@inject Blazored.SessionStorage.ISessionStorageService session
<PageTitle>Index</PageTitle>

<div class="container-fluid">
<h1>Hello, world!</h1>

<AuthorizeView>
    <Authorized>
        <p>Hello, @context.User.Identity.Name!</p>
    </Authorized>
    <NotAuthorized>
        <p>Hi, Guest!</p>
    </NotAuthorized>
</AuthorizeView>
<br />
<br />
<AuthorizeView>
    <Authorized>
      <button class="btn btn-outline-primary" @onclick="DisplayGreetingMessage">Display Greeting Alert</button>  
    </Authorized>
</AuthorizeView>

<button class="btn btn-success" @onclick="SetSessionUser">Set User</button>
<h2>@message</h2>



</div>

@code {
    

    string message;
    public void SetSessionUser()
    {
        var user = new User()
        {
            FirstName = "russ",
            LastName = "koprulu"
        };

        session.SetItemAsync("user", user);
        message = "session set successfully";

    }


    //====================

    //[CascadingParameter]
    //private Task<AuthenticationState> AuthenticationStateTask { get; set; }
    private async Task DisplayGreetingMessage()
    {
        var authState = await authStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        var message = $"Hello {user.Identity.Name}";
        await js.InvokeVoidAsync("alert", message);
    }
}